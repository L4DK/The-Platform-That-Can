datasource postgres {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  createdAt DateTime @default(now())
  firstName String?
  id        String   @id @default(cuid())
  lastName  String?
  password  String
  roles     Json
  updatedAt DateTime @updatedAt
  username  String   @unique
}

model ChaosSculptorUser {
  CompletedTasks Int
  createdAt      DateTime @default(now())
  id             String   @id @default(cuid())
  lastUsed       DateTime
  updatedAt      DateTime @updatedAt
}

model IdeaSprouterOwner {
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  updatedAt DateTime @updatedAt
}

model AiGatekeeperAgent {
  AIStatus       EnumAiGatekeeperAgentAiStatus
  createdAt      DateTime                      @default(now())
  id             String                        @id @default(cuid())
  roles          String?
  TasksCompleted Int
  updatedAt      DateTime                      @updatedAt
}

model DigitalCustodianAgent {
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  updatedAt DateTime @updatedAt
}

model IdeaViewerGuest {
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  updatedAt DateTime @updatedAt
}

model IdeaCollaboratorUser {
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  updatedAt DateTime @updatedAt
}

enum EnumAiGatekeeperAgentAiStatus {
  IDLE
  THINKING
  BREAK
  CLEANING
  TRAINING
  FETCHING_DATA
  DEBUGGING
  ACTIVE
  PROCESSING_IN_CLOUD
  MANAGING_LARGE_DATA
}
